{
  "comments": [
    {
      "key": {
        "uuid": "7adcefe9_0999a938",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-10-17T08:07:08Z",
      "side": 1,
      "message": "This change only makes this assumption in template rendering layer. I wonder why don\u0027t we go even further and manifest this relationship in the underlying data structure?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 31
      },
      "revId": "687f975483f8ac1f6d5784a4a5a972445150d08c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28f341d8_824184f4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-10-17T08:28:56Z",
      "side": 1,
      "message": "No, this assumption of having a 1:1 relation between checker and check is only true if you look at in the context of one patch set (which is the case for email notifications). Otherwise Checker is just the configuration/definition of a checker, and there are a many checks that belong to it (one per patch set for each change to which the checker applies). In the data structure we want to keep this separate, e.g. we want to be able to load a checker without loading all its checks.",
      "parentUuid": "7adcefe9_0999a938",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 10,
        "endChar": 31
      },
      "revId": "687f975483f8ac1f6d5784a4a5a972445150d08c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7d4c6a6_1d45b126",
        "filename": "java/com/google/gerrit/plugins/checks/email/CombinedCheckStateUpdatedSender.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-10-17T08:07:08Z",
      "side": 1,
      "message": "Can\u0027t we go even further and set this relationship in the model, by adding cehcker Attribut to check entity, so that this method could just be:\n\n    public void setCheck(Check check) {\n    [...]\n\nand to access checker, given a check instance, it could just be:\n\n   Checker checker \u003d check.getChecker();",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 52
      },
      "revId": "687f975483f8ac1f6d5784a4a5a972445150d08c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "425f9f83_942cd18d",
        "filename": "java/com/google/gerrit/plugins/checks/email/CombinedCheckStateUpdatedSender.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-10-17T08:28:56Z",
      "side": 1,
      "message": "The check already contains the checker UUID. This means we already have this relationship in the model. It\u0027s intentionally only the checker UUID so that checks can be loaded without loading all the checker data.\n\nWe could just pass the Check in here and let this class load the checker data, but I think senders should not load data on their own, and it\u0027s cleaner if all data is passed in.",
      "parentUuid": "f7d4c6a6_1d45b126",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 52
      },
      "revId": "687f975483f8ac1f6d5784a4a5a972445150d08c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc08b464_ed9ba821",
        "filename": "java/com/google/gerrit/plugins/checks/email/CombinedCheckStateUpdatedSender.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-10-17T09:57:13Z",
      "side": 1,
      "message": "I agree, that check should be loaded without loading the corresponding checker as well. However, there should be underlying data structure to hoist all the information required for related code paths to access the check and checkers instances, like the template rendering layer here.\n\nWhile it is not in scope of this change, but in core gerrit the same template rendering layer is using ChangeData, that is aware of the complete data structure related to the change, patch sets, approvals and what not.\n\nSo may be something similar could be added in checks plugin, CheckData, then that would contain Check and Checkers instances (and may be even more). So that this method could just be:\n\n  public void setCheck(CheckData cd) {\n  [...]\n\nAnd then access Check an Checker instances through: cd.getCheck() and cd.getChecker().",
      "parentUuid": "425f9f83_942cd18d",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 52
      },
      "revId": "687f975483f8ac1f6d5784a4a5a972445150d08c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b385b8b_adc7209b",
        "filename": "java/com/google/gerrit/plugins/checks/email/CombinedCheckStateUpdatedSender.java",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-10-17T10:18:51Z",
      "side": 1,
      "message": "Yeah, I agree that adding some class like CheckData (that is similar to ChangeData) may make sense at some point. I see how it would be useful here.",
      "parentUuid": "cc08b464_ed9ba821",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 52
      },
      "revId": "687f975483f8ac1f6d5784a4a5a972445150d08c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9141aef_5a18c564",
        "filename": "java/com/google/gerrit/plugins/checks/email/CombinedCheckStateUpdatedSender.java",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-10-21T20:07:03Z",
      "side": 1,
      "message": "Swap the order of the filling of entities, first check data and only then checker data? That\u0027s because, checker.check is set in the end, on the line 114, and the logical pre-requisite is that check data is filled first.",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 105,
        "endChar": 67
      },
      "revId": "687f975483f8ac1f6d5784a4a5a972445150d08c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "838d83f5_cf43b738",
        "filename": "java/com/google/gerrit/plugins/checks/email/CombinedCheckStateUpdatedSender.java",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-10-23T08:55:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e9141aef_5a18c564",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 105,
        "endChar": 67
      },
      "revId": "687f975483f8ac1f6d5784a4a5a972445150d08c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "571a66bd_03b249cf",
        "filename": "java/com/google/gerrit/plugins/checks/email/CombinedCheckStateUpdatedSender.java",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2019-10-21T20:07:03Z",
      "side": 1,
      "message": "It took me time to understand this map in map constructs. What we actually populating here, using maps is these two classes:\n\n  class CheckData {\n    int change;\n    int patchSet;\n    String repository;\n    String state;\n    String message;\n    String url;\n  }\n\n  class CheckerData {\n    String uuid;\n    String name;\n    String repository;\n    String description;\n    String url;\n    CheckData check;\n }\n\nBut we cannot used classes, because Soy template requires maps?\n\n* [1] http://paste.openstack.org/show/785379",
      "range": {
        "startLine": 107,
        "startChar": 4,
        "endLine": 114,
        "endChar": 40
      },
      "revId": "687f975483f8ac1f6d5784a4a5a972445150d08c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6963b232_1c661f32",
        "filename": "java/com/google/gerrit/plugins/checks/email/CombinedCheckStateUpdatedSender.java",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-10-23T08:55:54Z",
      "side": 1,
      "message": "Thanks for the suggestion. I gave it a try, but soy doesn\u0027t like it:\n\n  com.google.template.soy.data.SoyDataException: Attempting to convert unrecognized object to Soy value (object type com.google.gerrit.plugins.checks.email.CombinedCheckStateUpdatedSender$CheckerData).\n\nI\u0027ve added some JavaDoc to make this method a little clearer.",
      "parentUuid": "571a66bd_03b249cf",
      "range": {
        "startLine": 107,
        "startChar": 4,
        "endLine": 114,
        "endChar": 40
      },
      "revId": "687f975483f8ac1f6d5784a4a5a972445150d08c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}
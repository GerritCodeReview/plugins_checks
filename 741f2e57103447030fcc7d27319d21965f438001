{
  "pushCert": "certificate version 0.1\npusher Dave Borowitz \u003cdborowitz@google.com\u003e 1552440053 -0700\nnonce AC6AUtNszBjGF3VUKYEDNPMnj56oMoV7EPUBh5NjCVf2y8pBmSwV9UbQzD7slWyYkbbwOMg+ATHo\n\n0000000000000000000000000000000000000000 741f2e57103447030fcc7d27319d21965f438001 refs/for/master\n-----BEGIN PGP SIGNATURE-----\n\niQJJBAABCgAzFiEEpPm/sOxWgSqG5grhX9fFmpoSiIwFAlyIWvUVHGRib3Jvd2l0\nekBnb29nbGUuY29tAAoJEF/XxZqaEoiMfPgQAI3LWIsN3UuZ+M9MW6wkrZbdfqt1\nOefN4DYFYmqe9LssWgFji14v1k+NewmjSxS90LQ9xU2UubMfbt8YLvZk09HeMuAd\nJaBDusH1DU0e/6XfHNu+koKWZtseByVDbelCymOQGXsC2iaLzEK4Ye8TzxWqfZz2\nB3Ihjpja2gcpENSYnHGtlM/DFXCUYN7dYTxDcjHa7iP96QyBBH7eiIZhF02oJ5DR\nSfxCvrYbY/JurTtfCfZgxDKTUxKv8NdHDqybQIwTYID5Y6YtoOIvMvasVlWiw87q\nk9gsx9hoS8wOzK1PU+A2Y/GIpfGO5RKhqe2n/w9D2YK/iAOVcgPmJ7jnIQPDaUAu\noVCLWlJKqiTRGovRxJY+ORiD8YYDSaL5696Dd+fpwmblkhOdjtx50wqWFyaxbGlH\nP7qN0hyfKFgfx7r6Mrew8PTLYX+xAiNOeWMs4CYipi1xsma2/Gnv0BFDnaLwn5wF\nLR23GC2ZIRDvYY7ldyeAz2sjEv8qDgaKVQDtMH1HUfhTCUWyO7gts5ke1LmU6khx\nLThVAmSPNpov05QKjF5Um2InI4tklzpZaC59aro1wzC/xysKYrl6YOQSk9nvHRIR\n5PO/5c7awtcLRsUJCRE7aV5umNEwvex7OigYCjPcGS1Z/iohuRF6B/dHFr8Ev+H/\nk7mHWhdUPH+ElVZo\n\u003dbL9H\n-----END PGP SIGNATURE-----\n",
  "comments": [
    {
      "key": {
        "uuid": "4f02481c_643c44db",
        "filename": "java/com/google/gerrit/plugins/checks/api/CheckApiImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-03-13T16:23:58Z",
      "side": 1,
      "message": "I think this needs to be a provider now.",
      "range": {
        "startLine": 30,
        "startChar": 16,
        "endLine": 30,
        "endChar": 33
      },
      "revId": "741f2e57103447030fcc7d27319d21965f438001",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ae6178e_8e1f4e5a",
        "filename": "java/com/google/gerrit/plugins/checks/api/CheckApiImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-13T16:29:57Z",
      "side": 1,
      "message": "No, because CheckApiImpl is not a singleton. Each call to Factory#create will invoke the underlying Provider\u003cGetCheck\u003e stored in the Injector.",
      "parentUuid": "4f02481c_643c44db",
      "range": {
        "startLine": 30,
        "startChar": 16,
        "endLine": 30,
        "endChar": 33
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "741f2e57103447030fcc7d27319d21965f438001",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86166767_40fb18dc",
        "filename": "java/com/google/gerrit/plugins/checks/api/CheckApiImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-03-13T16:34:31Z",
      "side": 1,
      "message": "OK, but once I have an instance of CheckApiImpl, can\u0027t I call get(ListChecksOption...) multiple times on it with different options?",
      "parentUuid": "2ae6178e_8e1f4e5a",
      "range": {
        "startLine": 30,
        "startChar": 16,
        "endLine": 30,
        "endChar": 33
      },
      "revId": "741f2e57103447030fcc7d27319d21965f438001",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb892a50_ffbbcd32",
        "filename": "java/com/google/gerrit/plugins/checks/api/CheckApiImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-13T16:38:46Z",
      "side": 1,
      "message": "Our extension API explicitly recommends against reusing *Api classes:\n\nhttps://gerrit.googlesource.com/gerrit/+/dc85f27a25d5a41e0bbe308d3b4fd75e909f52df/java/com/google/gerrit/extensions/api/changes/Changes.java#30\n\n(We are missing javadoc in Checks.java)\n\nThat said, I wouldn\u0027t really mind changing it if you think it\u0027ll be easier to reason about.",
      "parentUuid": "86166767_40fb18dc",
      "range": {
        "startLine": 30,
        "startChar": 16,
        "endLine": 30,
        "endChar": 33
      },
      "revId": "741f2e57103447030fcc7d27319d21965f438001",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4409a547_29ef4e7e",
        "filename": "java/com/google/gerrit/plugins/checks/api/CheckApiImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-03-13T18:12:49Z",
      "side": 1,
      "message": "Also true. Then I\u0027m fine with either way.\n\nI do think most of our API implementations do use a Provider in this case.",
      "parentUuid": "bb892a50_ffbbcd32",
      "range": {
        "startLine": 30,
        "startChar": 16,
        "endLine": 30,
        "endChar": 33
      },
      "revId": "741f2e57103447030fcc7d27319d21965f438001",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dac065a8_e359b863",
        "filename": "java/com/google/gerrit/plugins/checks/api/CheckApiImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-03-13T16:23:58Z",
      "side": 1,
      "message": "retrieve",
      "range": {
        "startLine": 47,
        "startChar": 39,
        "endLine": 47,
        "endChar": 45
      },
      "revId": "741f2e57103447030fcc7d27319d21965f438001",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19f0e20d_28195e57",
        "filename": "java/com/google/gerrit/plugins/checks/api/CheckApiImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-13T16:29:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dac065a8_e359b863",
      "range": {
        "startLine": 47,
        "startChar": 39,
        "endLine": 47,
        "endChar": 45
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "741f2e57103447030fcc7d27319d21965f438001",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd2cd7b1_46778d26",
        "filename": "java/com/google/gerrit/plugins/checks/api/ChecksImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-03-13T16:23:58Z",
      "side": 1,
      "message": "Should this be a provider now?",
      "range": {
        "startLine": 38,
        "startChar": 16,
        "endLine": 38,
        "endChar": 37
      },
      "revId": "741f2e57103447030fcc7d27319d21965f438001",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22c545fe_9b997f55",
        "filename": "java/com/google/gerrit/plugins/checks/api/ChecksImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-13T16:29:57Z",
      "side": 1,
      "message": "No, same answer as in CheckApiImpl.",
      "parentUuid": "fd2cd7b1_46778d26",
      "range": {
        "startLine": 38,
        "startChar": 16,
        "endLine": 38,
        "endChar": 37
      },
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "741f2e57103447030fcc7d27319d21965f438001",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d545c4a_6139d97d",
        "filename": "javatests/com/google/gerrit/plugins/checks/acceptance/api/GetCheckIT.java",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-03-13T16:23:58Z",
      "side": 1,
      "message": "also assert that the new fields are not populated?",
      "revId": "741f2e57103447030fcc7d27319d21965f438001",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53103f32_806884c1",
        "filename": "javatests/com/google/gerrit/plugins/checks/acceptance/api/GetCheckIT.java",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-13T16:29:57Z",
      "side": 1,
      "message": "That\u0027s what it\u0027s doing: CheckInfo#equals compares all fields, including the null fields not set here.",
      "parentUuid": "2d545c4a_6139d97d",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "741f2e57103447030fcc7d27319d21965f438001",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0fc245a_9c24c267",
        "filename": "javatests/com/google/gerrit/plugins/checks/acceptance/api/GetCheckIT.java",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-03-13T16:34:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "53103f32_806884c1",
      "revId": "741f2e57103447030fcc7d27319d21965f438001",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}
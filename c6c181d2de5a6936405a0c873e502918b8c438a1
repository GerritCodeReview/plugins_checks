{
  "comments": [
    {
      "key": {
        "uuid": "b47322e0_adb47067",
        "filename": "java/com/google/gerrit/plugins/checks/db/CheckNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-03-19T09:29:05Z",
      "side": 1,
      "message": "Instead of reading the whole revisionNoteMap for this case, we could try to read the one file directly. That would only work if notes are not sharded, but that should be almost always the case since we have notes per patch sets and changes have not that many patch sets. For safety we could still fall back to reading the full note map as it is done now. Anyway that would be an optimization for a follow-up change. I would only do it if Patricks latency experiment shows that this is significantly faster.",
      "range": {
        "startLine": 154,
        "startChar": 83,
        "endLine": 154,
        "endChar": 98
      },
      "revId": "c6c181d2de5a6936405a0c873e502918b8c438a1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89dfcb6e_84ad0411",
        "filename": "java/com/google/gerrit/plugins/checks/db/CheckNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-26T17:07:00Z",
      "side": 1,
      "message": "\u003e Instead of reading the whole revisionNoteMap for this case, we could try to read the one file directly. That would only work if notes are not sharded\n\nThere\u0027s already an easy way to read a single file from a note map that respects sharding: NoteMap#get. Is there some reason you can\u0027t use that?",
      "parentUuid": "b47322e0_adb47067",
      "range": {
        "startLine": 154,
        "startChar": 83,
        "endLine": 154,
        "endChar": 98
      },
      "revId": "c6c181d2de5a6936405a0c873e502918b8c438a1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dda73f7_481fde0d",
        "filename": "java/com/google/gerrit/plugins/checks/db/CheckNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-03-27T11:08:11Z",
      "side": 1,
      "message": "There is no static NoteMap#get method which allows me to directly read a single note. This means we first have to load the whole NoteMap object and then we can use the get method on that instance to get the one note. This is exactly what we are doing here (well inside of CheckRevisionNoteMap#parseChecksForSingleRevision). The point of my comment was that it would be nice if loading the whole NoteMap object wasn\u0027t necessary. Am I missing anything?",
      "parentUuid": "89dfcb6e_84ad0411",
      "range": {
        "startLine": 154,
        "startChar": 83,
        "endLine": 154,
        "endChar": 98
      },
      "revId": "c6c181d2de5a6936405a0c873e502918b8c438a1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c9e7a9e_17bb2225",
        "filename": "java/com/google/gerrit/plugins/checks/db/CheckNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-27T14:46:36Z",
      "side": 1,
      "message": "\u003e The point of my comment was that it would be nice if loading the whole NoteMap object wasn\u0027t necessary. Am I missing anything?\n\nNoteMap !\u003d RevisionNoteMap\n\nYes, you have to load the NoteMap in order to call a non-static NoteMap method. You should double-check me here, but I thought that loading a NoteMap only loads the root bucket, it doesn\u0027t eagerly walk the entire tree.\n\nBy contrast, CheckRevisionNoteMap#parseChecks definitely does eagerly parse everything.",
      "parentUuid": "1dda73f7_481fde0d",
      "range": {
        "startLine": 154,
        "startChar": 83,
        "endLine": 154,
        "endChar": 98
      },
      "revId": "c6c181d2de5a6936405a0c873e502918b8c438a1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7c5f1d8_c7ff0eb3",
        "filename": "java/com/google/gerrit/plugins/checks/db/CheckNotes.java",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-03-28T09:36:42Z",
      "side": 1,
      "message": "\u003e NoteMap !\u003d RevisionNoteMap\n\nHmm, when I said \u0027revisionNoteMap\u0027 I referred to the variable \u0027revisionNoteMap\u0027 which is of type NoteMap. So maybe that\u0027s a bad name?\n\nI understand now, that it\u0027s currently not possible to lookup a note for a specific ObjectId without instantiating NoteMap via NoteMap.read(...) first. Under this condition the current code is the best we can do to only load the note for a specific revision:\n\n1. instantiate NoteMap via NoteMap.read(...) (-\u003e l. 149)\n2. get a single note from the NoteMap via get(...) (-\u003e l. 153, then [1]).\n\nMy wishful thinking was that we could avoid step 1 and directly read the note that we are interested in. Actually after writing this comment Patrick measured the latency for 1. + 2. [2] vs. reading a file directly [3] (but [3] doesn\u0027t take sharding into account). If I got Patrick correctly the difference was not significant, but reading a file directly was slightly slower. I\u0027m not sure if the difference is still non-significant if there are a lot of notes in the NoteMap (certainly not the case for check notes, since we have 1 note per patch set and there are not that many patch sets per change, however this question may be relevant for external ID notes). \n\nSo I guess this means, no further optimization needed here (hence marking this thread as resolved).\n\n\u003e Yes, you have to load the NoteMap in order to call a non-static NoteMap method.\n\u003e You should double-check me here, but I thought that loading a NoteMap only loads\n\u003e the root bucket, it doesn\u0027t eagerly walk the entire tree.\n\nI looked at the NoteMap and NoteParser code . I think you are right that it only loads the root bucket eagerly and the rest is loaded lazily. At least [4] makes me think so. Still for large note maps (e.g. external IDs) even loading the whole root bucket may waste some time.\n\n\u003e By contrast, CheckRevisionNoteMap#parseChecks definitely does eagerly parse everything.\n\nYes, that\u0027s why it\u0027s renamed to parseChecksForAllRevisions and is not used in this case where we are only interested in a single revision.\n\n[1] https://gerrit-review.googlesource.com/c/plugins/checks/+/218301/1/java/com/google/gerrit/plugins/checks/db/CheckRevisionNoteMap.java#49\n[2] https://cs.corp.google.com/piper///depot/google3/java/com/google/devtools/gerritcodereview/server/flume/GerritLatencyExperiment.java?rcl\u003d240317301\u0026l\u003d105\n[3] https://cs.corp.google.com/piper///depot/google3/java/com/google/devtools/gerritcodereview/server/flume/GerritLatencyExperiment.java?rcl\u003d240317301\u0026l\u003d125\n[4] https://cs.corp.google.com/piper///depot/google3/third_party/java_src/jgit/org.eclipse.jgit/java/org/eclipse/jgit/notes/NoteParser.java?rcl\u003d19337302\u0026l\u003d72",
      "parentUuid": "5c9e7a9e_17bb2225",
      "range": {
        "startLine": 154,
        "startChar": 83,
        "endLine": 154,
        "endChar": 98
      },
      "revId": "c6c181d2de5a6936405a0c873e502918b8c438a1",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}
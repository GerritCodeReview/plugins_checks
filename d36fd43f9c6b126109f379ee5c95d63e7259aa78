{
  "comments": [
    {
      "key": {
        "uuid": "05bf777a_6393af28",
        "filename": "java/com/google/gerrit/plugins/checks/Checks.java",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-18T19:57:11Z",
      "side": 1,
      "message": "I don\u0027t see why this added complexity is necessary. For submit rules, just allow SUCCESSFUL, WARNING, or NOT_RELEVANT.",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 73,
        "endChar": 81
      },
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "553c0e82_14cc689b",
        "filename": "java/com/google/gerrit/plugins/checks/Checks.java",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-18T20:03:36Z",
      "side": 1,
      "message": "https://gerrit-review.googlesource.com/c/plugins/checks/+/218344 to clarify this in the documentation.",
      "parentUuid": "05bf777a_6393af28",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 73,
        "endChar": 81
      },
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d0ac54b_d48d2caa",
        "filename": "java/com/google/gerrit/plugins/checks/Checks.java",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2019-03-19T18:40:22Z",
      "side": 1,
      "message": "Thanks.\n\nThis is necessary given the current enum CombinedCheckState implementation.\n\nCurrently, CombinedCheckState doesn\u0027t fully considered how \"required\" could affect the \"passing\" value. Althought it tries but it doesn\u0027t work as it intends to AFAICT.\n\nFor example, if we feed in a single \"{CheckState: NOT_STARTED, boolean: required}\", currently the combined check state is always \"IN_PROGRESS\" with \"passing \u003d false\" for both \"required \u003d true \u0026 false\". From submittable perspective, I would expect \"passing \u003d false\" if \"required \u003d true\", and \"passing \u003d true\" if \"required \u003d false\".\n\nTo fix the problem, I think we should fix in the CombinedCheckState:\n\n* I agree with the current \"passing\" value for each enum value, i.e. only SUCCESSFUL and NOT_RELEVANT have \"passing \u003d true\", which means the change is submittable.\n* I think NOT_RELEVANT is a confusing state because it says \"No checks are relevant to this change\" but what if those checks are relevant but not required? \n* Ideally, I think:\n  # NOT_RELEVANT should be used when the input \"statesAndRequired\" is empty so it really means no checker cares about this patch set. \n  # A new enum value, e.g. NOT_REQUIRED(true), should be introduced for the case that all the checkers are not required. \n  # If \"statesAndRequired\" contained both required and non-required checks, we only combine required checks.\n\nBasically, I was saying all CombinedCheckState should only care about required checks except NOT_RELEVANT and NOT_REQUIRED.\n\nHow do you think?",
      "parentUuid": "553c0e82_14cc689b",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 73,
        "endChar": 81
      },
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2bf1bad_5d421726",
        "filename": "java/com/google/gerrit/plugins/checks/Checks.java",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2019-03-19T21:09:48Z",
      "side": 1,
      "message": "resolved through chat.\n\nTrust the CombinedCheckState for now. Will discuss with UX about what is the expecting behavior of CombinedCheckState. After we figure that out, I will make sure CombinedCheckState meet submit requirements.",
      "parentUuid": "9d0ac54b_d48d2caa",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 73,
        "endChar": 81
      },
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8fd5fa7e_773dd8f2",
        "filename": "java/com/google/gerrit/plugins/checks/Checks.java",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2019-03-18T18:51:23Z",
      "side": 1,
      "message": "I\u0027m also fine to make this an option like the other two interfaces.",
      "range": {
        "startLine": 79,
        "startChar": 59,
        "endLine": 79,
        "endChar": 93
      },
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92749e4a_3d1e6eb9",
        "filename": "java/com/google/gerrit/plugins/checks/Checks.java",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2019-03-19T18:40:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8fd5fa7e_773dd8f2",
      "range": {
        "startLine": 79,
        "startChar": 59,
        "endLine": 79,
        "endChar": 93
      },
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7f4c48e7_1e77f25a",
        "filename": "java/com/google/gerrit/plugins/checks/db/NoteDbChecks.java",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-18T19:57:11Z",
      "side": 1,
      "message": "I would avoid the term \"applicable\". It could be easily confused with \"relevant\", but Checkers#checkersOf doesn\u0027t do any relevancy tests, it just returns all checkers for a repo.",
      "range": {
        "startLine": 104,
        "startChar": 34,
        "endLine": 104,
        "endChar": 52
      },
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af830a32_f6c7e47f",
        "filename": "java/com/google/gerrit/plugins/checks/db/NoteDbChecks.java",
        "patchSetId": 2
      },
      "lineNbr": 104,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2019-03-19T18:40:22Z",
      "side": 1,
      "message": "How about \"allCheckerOfProject\" then?",
      "parentUuid": "7f4c48e7_1e77f25a",
      "range": {
        "startLine": 104,
        "startChar": 34,
        "endLine": 104,
        "endChar": 52
      },
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89898c91_65cf63ed",
        "filename": "java/com/google/gerrit/plugins/checks/db/NoteDbChecks.java",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-18T19:57:11Z",
      "side": 1,
      "message": "The call to Checkers#checkersOf on line 106 already filters out disabled checkers, so this is unnecessary. If you\u0027re worried about it, then you can convert it to a checkState. It indicates programmer error: it\u0027s a bug in the implementation of #checkersOf if it returns any disabled checkers. But I think it\u0027s probably also fine to leave out.",
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57543d1a_93b2b701",
        "filename": "java/com/google/gerrit/plugins/checks/db/NoteDbChecks.java",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2019-03-19T18:40:22Z",
      "side": 1,
      "message": "The java doc of #checkersOf claims it never returns disabled checkers. But honestly, I didn\u0027t find where in our code this is done. My test failure told me yes there is a bug (disalbed checkers are not filtered out).",
      "parentUuid": "89898c91_65cf63ed",
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a692b2d_956ce3db",
        "filename": "java/com/google/gerrit/plugins/checks/db/NoteDbChecks.java",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2019-03-19T20:05:57Z",
      "side": 1,
      "message": "Hmm. There is a test \"CheckersIT#checkersOfOmitsDisabledCheckers\". Maybe I\u0027m wrong.",
      "parentUuid": "57543d1a_93b2b701",
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6986c05_b89e7878",
        "filename": "java/com/google/gerrit/plugins/checks/db/NoteDbChecks.java",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2019-03-19T21:06:37Z",
      "side": 1,
      "message": "It\u0027s a bug. Fixed in the parent commit.",
      "parentUuid": "0a692b2d_956ce3db",
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "919c0375_67d80c37",
        "filename": "java/com/google/gerrit/plugins/checks/db/NoteDbChecks.java",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-18T19:57:11Z",
      "side": 1,
      "message": "Please move this to a static method on BlockingCondition like I did in https://gerrit-review.googlesource.com/c/plugins/checks/+/218064\n\nYou can copy and paste my implementation and tests if you want.",
      "range": {
        "startLine": 129,
        "startChar": 5,
        "endLine": 139,
        "endChar": 0
      },
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f49d06bf_e8c4d3c2",
        "filename": "java/com/google/gerrit/plugins/checks/db/NoteDbChecks.java",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2019-03-19T18:40:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "919c0375_67d80c37",
      "range": {
        "startLine": 129,
        "startChar": 5,
        "endLine": 139,
        "endChar": 0
      },
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f058f00f_0a12256c",
        "filename": "javatests/com/google/gerrit/plugins/checks/db/GetCombinedCheckStateIT.java",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-18T19:57:11Z",
      "side": 1,
      "message": "I think setting up the checker and the check in setUp is making the bodies of your test methods harder to follow. I as a reader need to remember what state you\u0027ve set up. Then, in some of the tests, you change this config, or add new config that I now have to remember. It makes it less than clear what the expected behavior is intended to be.\n\nI would recommend setting up checkers and checks exactly how you want them for each method. If you\u0027re concerned about the boilerplate because a newChecker operation takes 7 lines, you can add some descriptively-named helper methods. For example:\n\n @Test\n public void returnsFailedWhenAnyRequiredCheckerFailed() throws Exception {\n   CheckerUuid checkerUuid1 \u003d newRequiredChecker().create();\n   CheckerUuid checkerUuid2 \u003d newRequiredChecker().create();\n \n   setCheckState(checkerUuid1, CheckState.FAILED);\n   setCheckState(checkerUuid2, CheckState.SUCCESSFUL);\n \n   assertThat(checks.getCombinedCheckState(project, patchSetId, true))\n       .isEqualTo(CombinedCheckState.FAILED);\n }\n \n private TestCheckerCreation newRequiredChecker() {\n   return\n       checkerOperations\n           .newChecker()\n           .repository(project)\n           .blockingConditions(BlockingCondition.STATE_NOT_PASSING);\n }\n\nI would find this method much easier to understand than the current implementation is.",
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0dde17b_6e804cba",
        "filename": "javatests/com/google/gerrit/plugins/checks/db/GetCombinedCheckStateIT.java",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2019-03-19T18:40:22Z",
      "side": 1,
      "message": "Agree the above looks better.",
      "parentUuid": "f058f00f_0a12256c",
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "945daa6f_2a5ca140",
        "filename": "javatests/com/google/gerrit/plugins/checks/db/GetCombinedCheckStateIT.java",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-18T22:22:29Z",
      "side": 1,
      "message": "Maybe add a test combining one SUCCESSFUL check and one backfilled NOT_RELEVANT check.",
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fdb51db_ce29544e",
        "filename": "javatests/com/google/gerrit/plugins/checks/db/GetCombinedCheckStateIT.java",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 1031898
      },
      "writtenOn": "2019-03-19T18:40:22Z",
      "side": 1,
      "message": "I think we could a test with just one backfilled check so that we can verify it\u0027s used. BTW we are backfilling NOT_STARTED so the expected combined state should be IN_PROGRESS.",
      "parentUuid": "945daa6f_2a5ca140",
      "revId": "d36fd43f9c6b126109f379ee5c95d63e7259aa78",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "f5a6c209_eaba4463",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-03-19T17:40:25Z",
      "side": 1,
      "message": "set",
      "range": {
        "startLine": 9,
        "startChar": 48,
        "endLine": 9,
        "endChar": 52
      },
      "revId": "4caf516843bd34d7e196751c4949ba00c399fefe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bf4633f_31c8b857",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-03-20T14:33:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f5a6c209_eaba4463",
      "range": {
        "startLine": 9,
        "startChar": 48,
        "endLine": 9,
        "endChar": 52
      },
      "revId": "4caf516843bd34d7e196751c4949ba00c399fefe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "178ab187_e860be90",
        "filename": "java/com/google/gerrit/plugins/checks/CheckUpdate.java",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-03-19T17:40:25Z",
      "side": 1,
      "message": "This approach won\u0027t be very flexible. Please take a look at how we implemented updates of members/subgroups of groups.",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 36,
        "endChar": 56
      },
      "revId": "4caf516843bd34d7e196751c4949ba00c399fefe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "389d532e_e5989f36",
        "filename": "java/com/google/gerrit/plugins/checks/CheckUpdate.java",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-03-20T14:33:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "178ab187_e860be90",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 36,
        "endChar": 56
      },
      "revId": "4caf516843bd34d7e196751c4949ba00c399fefe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "375949ec_d3f14053",
        "filename": "java/com/google/gerrit/plugins/checks/acceptance/testsuite/TestCheckUpdate.java",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-03-19T17:40:25Z",
      "side": 1,
      "message": "This approach won\u0027t be very flexible, especially for tests which might need to freely adjust the overrides depending on the desired test situation. Please refer to the test API of groups how we allow to freely modify members/subgroups.",
      "range": {
        "startLine": 40,
        "startChar": 2,
        "endLine": 40,
        "endChar": 56
      },
      "revId": "4caf516843bd34d7e196751c4949ba00c399fefe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7a2c6f9_1bcf4bc9",
        "filename": "java/com/google/gerrit/plugins/checks/acceptance/testsuite/TestCheckUpdate.java",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-03-20T14:33:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "375949ec_d3f14053",
      "range": {
        "startLine": 40,
        "startChar": 2,
        "endLine": 40,
        "endChar": 56
      },
      "revId": "4caf516843bd34d7e196751c4949ba00c399fefe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5200504c_d8410897",
        "filename": "java/com/google/gerrit/plugins/checks/api/CheckOverride.java",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-03-20T14:33:10Z",
      "side": 1,
      "message": "I was thinking about writing a javadoc for this class, but as the information I can provide is essentially redundant (e.g \"reason\" is the reason for the override and \"Timestamp overridenOn\" is the timestamp that the check was overridden on\") I think it\u0027s best to not add those comments.",
      "range": {
        "startLine": 19,
        "startChar": 13,
        "endLine": 19,
        "endChar": 26
      },
      "revId": "4caf516843bd34d7e196751c4949ba00c399fefe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f63f7464_85c23753",
        "filename": "java/com/google/gerrit/plugins/checks/api/CheckOverride.java",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-03-26T19:40:23Z",
      "side": 1,
      "message": "I added suggestions for Javadoc descriptions which contain more than just a repetition of the field/class name to the latest patch set. To come up with something like that, I also need to think more than just a minute about them. Please try to come up with something reasonable next time so that I don\u0027t have to spend time on this.",
      "parentUuid": "5200504c_d8410897",
      "range": {
        "startLine": 19,
        "startChar": 13,
        "endLine": 19,
        "endChar": 26
      },
      "revId": "4caf516843bd34d7e196751c4949ba00c399fefe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de4bffd3_45012caa",
        "filename": "java/com/google/gerrit/plugins/checks/api/CheckOverride.java",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-03-11T13:23:48Z",
      "side": 1,
      "message": "I will look into making this Account.Id later",
      "range": {
        "startLine": 20,
        "startChar": 9,
        "endLine": 20,
        "endChar": 16
      },
      "revId": "4caf516843bd34d7e196751c4949ba00c399fefe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06c5996b_91deedbd",
        "filename": "java/com/google/gerrit/plugins/checks/api/CheckOverride.java",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-03-20T14:33:10Z",
      "side": 1,
      "message": "I\u0027m still confused about this. It mentions a runtime error:\nFailed to invoke public com.google.gerrit.entities.Account$Id() with no args\n\nAnyway, as far as I understand this is not supported for storage in noteDb and JSON.",
      "parentUuid": "de4bffd3_45012caa",
      "range": {
        "startLine": 20,
        "startChar": 9,
        "endLine": 20,
        "endChar": 16
      },
      "revId": "4caf516843bd34d7e196751c4949ba00c399fefe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f6b213b_01f7b205",
        "filename": "java/com/google/gerrit/plugins/checks/api/CheckOverride.java",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2020-03-26T19:40:23Z",
      "side": 1,
      "message": "Well, there\u0027s a reason the class NoteDbCheck exists. As you noticed, you needed to adjust it to store overrides in NoteDb. As that class is a \"Representation of {@link Check} that can be serialized with GSON.\" (Javadoc description of the class), what do you think you need for overrides?\n\nBy the way, the error you quoted is absolutely expected. Gson tries to instantiate classes via their default/no-arg constructor, which doesn\u0027t exist for AutoValues.",
      "parentUuid": "06c5996b_91deedbd",
      "range": {
        "startLine": 20,
        "startChar": 9,
        "endLine": 20,
        "endChar": 16
      },
      "revId": "4caf516843bd34d7e196751c4949ba00c399fefe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9f60e39_f8bd76cb",
        "filename": "java/com/google/gerrit/plugins/checks/api/CheckOverride.java",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1085183
      },
      "writtenOn": "2020-03-27T14:52:05Z",
      "side": 1,
      "message": "From what I understand, the way to solve this is to ensure that all parameters of NodeDbCheck don\u0027t contain Account.Id. Therefore, I\u0027ll need to create a class that\u0027s identical to the current CheckOverride (and then change the Integer to Account.Id in the current CheckOverride.\nThis way, I have two identical classes except that one has Integer and the other has Account.Id.\nIn NoteDbCheck, I\u0027ll need to convert between those classes a few times (three times, because of the implementation of overridesModification).\n\nI wrote the code that I mentioned above and I\u0027m now tempted to delete it because it is very unclean and confusing.\nDid you expect this? Is there a cleaner way to do this?\nIf this is the way to do it, I\u0027d like to go back to using Integer.",
      "parentUuid": "2f6b213b_01f7b205",
      "range": {
        "startLine": 20,
        "startChar": 9,
        "endLine": 20,
        "endChar": 16
      },
      "revId": "4caf516843bd34d7e196751c4949ba00c399fefe",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}
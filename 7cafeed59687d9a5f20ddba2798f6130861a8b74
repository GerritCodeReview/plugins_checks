{
  "comments": [
    {
      "key": {
        "uuid": "52093c6c_ee5a81bb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-30T18:20:08Z",
      "side": 1,
      "message": "I can confirm that this change fixes the issue with the submittability of the change. However, the submit button still doesn\u0027t show up, even after a reload. Only if the votes on a label are changed (e.g. to another value and than back again to +2), the submit button shows up. Should we address this in a separate change?",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 66
      },
      "revId": "7cafeed59687d9a5f20ddba2798f6130861a8b74",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4539ca8_c2f8151f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-31T12:59:02Z",
      "side": 1,
      "message": "Yes, I think this is another issue which requires a different fix, so it\u0027s better done as follow-up.",
      "parentUuid": "52093c6c_ee5a81bb",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 66
      },
      "revId": "7cafeed59687d9a5f20ddba2798f6130861a8b74",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a48c1c62_a733b325",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-31T14:48:24Z",
      "side": 1,
      "message": "This will get fixed by [1]. Once [1] is submitted we should add a test for this case inside the checks plugin.\n\n[1] https://gerrit-review.googlesource.com/c/gerrit/+/232814",
      "parentUuid": "a4539ca8_c2f8151f",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 66
      },
      "revId": "7cafeed59687d9a5f20ddba2798f6130861a8b74",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb40f3b7_ea80a0eb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-31T18:18:10Z",
      "side": 1,
      "message": "It\u0027s submitted and I can confirm that the submit button shows up properly now. :-)\n\nDo you want to add the test as part of this change?",
      "parentUuid": "a48c1c62_a733b325",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 66
      },
      "revId": "7cafeed59687d9a5f20ddba2798f6130861a8b74",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea847eca_2dcc47fb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-30T18:20:08Z",
      "side": 1,
      "message": "I thought a bit about it and I think that we could use the combined state cache we already have for this. Should we investigate this variant as a follow-up change?",
      "range": {
        "startLine": 20,
        "startChar": 29,
        "endLine": 24,
        "endChar": 71
      },
      "revId": "7cafeed59687d9a5f20ddba2798f6130861a8b74",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f915149_7e40747a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-31T12:59:02Z",
      "side": 1,
      "message": "I would prefer to explore this as follow-up but it\u0027s a good thought!",
      "parentUuid": "ea847eca_2dcc47fb",
      "range": {
        "startLine": 20,
        "startChar": 29,
        "endLine": 24,
        "endChar": 71
      },
      "revId": "7cafeed59687d9a5f20ddba2798f6130861a8b74",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0d7b57e_5441382b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-31T18:18:10Z",
      "side": 1,
      "message": "Sure. Setting this to resolved as it will be a follow-up.\n\nBy the way, I quickly looked into this. There\u0027s one shortcoming of the current definition of the ChangeETagComputation. It doesn\u0027t specify any patch set ID, not even the one of the current patch set. Do you think we could still change this?",
      "parentUuid": "4f915149_7e40747a",
      "range": {
        "startLine": 20,
        "startChar": 29,
        "endLine": 24,
        "endChar": 71
      },
      "revId": "7cafeed59687d9a5f20ddba2798f6130861a8b74",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "620b4e68_7a4fe57c",
        "filename": "java/com/google/gerrit/plugins/checks/db/NoteDbChecks.java",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-30T18:20:08Z",
      "side": 1,
      "message": "Do you think that we should make a difference between the value used for an error (\"\") and the value used when no checks are present (ObjectId.zeroId().getName())? (I\u0027m asking as I don\u0027t know whether this was an explicit decision or not.)",
      "range": {
        "startLine": 164,
        "startChar": 67,
        "endLine": 164,
        "endChar": 94
      },
      "revId": "7cafeed59687d9a5f20ddba2798f6130861a8b74",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7853c557_ccf508c0",
        "filename": "java/com/google/gerrit/plugins/checks/db/NoteDbChecks.java",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-31T12:59:02Z",
      "side": 1,
      "message": "\u003e Do you think that we should make a difference between the value used for an error (\"\")\n\u003e and the value used when no checks are present (ObjectId.zeroId().getName())?\n\nYes, it\u0027s intended that the value is different in these cases, but I\u0027m not sure if it\u0027s important (but it is consistent with how core handles errors during the ETag computation).\n\nIn core we use ObjectId.zeroId() if a ref is not present, so for consistency it makes sense to do the same here.\n\nErrors in core lead to not adding any value to the Hasher, but since we should not return null from the ChangeETagComputation extension point (the return value is not annotated with @Nullable, although the caller in ChangeResource handles null) I used the empty string instead.\n\nWe may return null for errors and add the @Nullable annotation to the extension point if we think that is better.",
      "parentUuid": "620b4e68_7a4fe57c",
      "range": {
        "startLine": 164,
        "startChar": 67,
        "endLine": 164,
        "endChar": 94
      },
      "revId": "7cafeed59687d9a5f20ddba2798f6130861a8b74",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8220570_ee200104",
        "filename": "java/com/google/gerrit/plugins/checks/db/NoteDbChecks.java",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-31T14:09:05Z",
      "side": 1,
      "message": "Thanks for the details. I agree that consistency is good and we should stick with ObjectId.zeroId() for a missing ref.\n\nWhether we use null or the empty string for an error is equally good for me. Instead of null, an Optional might have been better but I think we don\u0027t have this option anymore due to backwards compatibility. I\u0027m fine with any option you choose.",
      "parentUuid": "7853c557_ccf508c0",
      "range": {
        "startLine": 164,
        "startChar": 67,
        "endLine": 164,
        "endChar": 94
      },
      "revId": "7cafeed59687d9a5f20ddba2798f6130861a8b74",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5884bd16_ea5afa0a",
        "filename": "java/com/google/gerrit/plugins/checks/db/NoteDbChecks.java",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-31T14:31:08Z",
      "side": 1,
      "message": "I think backwards compatibility is not an issue here, since this extension point isn\u0027t contained in any release yet. I think we can still change it to return Optional if we want.",
      "parentUuid": "d8220570_ee200104",
      "range": {
        "startLine": 164,
        "startChar": 67,
        "endLine": 164,
        "endChar": 94
      },
      "revId": "7cafeed59687d9a5f20ddba2798f6130861a8b74",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca0434c9_97e9c931",
        "filename": "java/com/google/gerrit/plugins/checks/db/NoteDbChecks.java",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1003935
      },
      "writtenOn": "2019-07-31T14:37:48Z",
      "side": 1,
      "message": "Another possibility would be to allow throwing an exception from the extension point and then let the caller handle it.",
      "parentUuid": "5884bd16_ea5afa0a",
      "range": {
        "startLine": 164,
        "startChar": 67,
        "endLine": 164,
        "endChar": 94
      },
      "revId": "7cafeed59687d9a5f20ddba2798f6130861a8b74",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bc0169c_1e79e4d1",
        "filename": "java/com/google/gerrit/plugins/checks/db/NoteDbChecks.java",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-31T18:18:10Z",
      "side": 1,
      "message": "That\u0027s a very good idea. There\u0027s no reason to treat checked exceptions and runtime exceptions differently. I wouldn\u0027t add an explicit checked exception to the method signature of ChangeETagComputation#getETag, though. What about wrapping the IOException into an appropriate runtime exception?\n\nWe should maybe also have a test somewhere (probably in core?) which ensures that plugins may safely throw a runtime exception. As a consequence, we can also document this behavior in the Javadoc description of ChangeETagComputation#getETag.",
      "parentUuid": "ca0434c9_97e9c931",
      "range": {
        "startLine": 164,
        "startChar": 67,
        "endLine": 164,
        "endChar": 94
      },
      "revId": "7cafeed59687d9a5f20ddba2798f6130861a8b74",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5180a15_42e72e05",
        "filename": "javatests/com/google/gerrit/plugins/checks/acceptance/api/UpdateCheckIT.java",
        "patchSetId": 1
      },
      "lineNbr": 377,
      "author": {
        "id": 1030912
      },
      "writtenOn": "2019-07-30T18:20:08Z",
      "side": 1,
      "message": "Thanks for thinking of this test as well.",
      "range": {
        "startLine": 377,
        "startChar": 14,
        "endLine": 377,
        "endChar": 56
      },
      "revId": "7cafeed59687d9a5f20ddba2798f6130861a8b74",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}
{
  "comments": [
    {
      "key": {
        "uuid": "25281007_a3c120a8",
        "filename": "java/com/google/gerrit/plugins/checks/acceptance/testsuite/CheckerOperationsImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 236,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-06T18:00:10Z",
      "side": 1,
      "message": "Nice.",
      "revId": "75b3c5619f0ea818f14cb1f5d9459ad6b3f28133",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "371dac3a_a8966e97",
        "filename": "java/com/google/gerrit/plugins/checks/acceptance/testsuite/TestCheckerUpdate.java",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-06T18:00:10Z",
      "side": 1,
      "message": "Optional: this doesn\u0027t have to be an Optional, it can be a boolean that is initialized to false by default in builder(...)",
      "revId": "75b3c5619f0ea818f14cb1f5d9459ad6b3f28133",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "189614db_9658d1f8",
        "filename": "java/com/google/gerrit/plugins/checks/acceptance/testsuite/TestCheckerUpdate.java",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-03-07T17:23:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "371dac3a_a8966e97",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "75b3c5619f0ea818f14cb1f5d9459ad6b3f28133",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53c69657_c9fe0272",
        "filename": "java/com/google/gerrit/plugins/checks/db/NoteDbChecks.java",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-06T18:31:11Z",
      "side": 1,
      "message": "Done in a followup.",
      "revId": "75b3c5619f0ea818f14cb1f5d9459ad6b3f28133",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af8e724e_89ab0dea",
        "filename": "java/com/google/gerrit/plugins/checks/db/NoteDbChecks.java",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-07T19:17:17Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "53c69657_c9fe0272",
      "revId": "75b3c5619f0ea818f14cb1f5d9459ad6b3f28133",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4c70446_bac5673f",
        "filename": "javatests/com/google/gerrit/plugins/checks/acceptance/GetCheckIT.java",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-06T18:00:10Z",
      "side": 1,
      "message": "Please add a test for syntactically invalid checker UUIDs.",
      "revId": "75b3c5619f0ea818f14cb1f5d9459ad6b3f28133",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a3cfc8f_a5899601",
        "filename": "javatests/com/google/gerrit/plugins/checks/acceptance/GetCheckIT.java",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-03-07T17:23:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c4c70446_bac5673f",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "75b3c5619f0ea818f14cb1f5d9459ad6b3f28133",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6610f094_4ad30f35",
        "filename": "javatests/com/google/gerrit/plugins/checks/acceptance/api/ListChecksIT.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-06T18:00:10Z",
      "side": 1,
      "message": "Please add tests for nonexistent and syntactically invalid checker UUIDs.",
      "revId": "75b3c5619f0ea818f14cb1f5d9459ad6b3f28133",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5ebd7c8_8c198aab",
        "filename": "javatests/com/google/gerrit/plugins/checks/acceptance/api/ListChecksIT.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-03-07T17:23:40Z",
      "side": 1,
      "message": "I am not sure I can. Do you mean that the storage contains checks with invalid UUIDs?\n\nThat can\u0027t happen because of the other enforcements we have, right? It also seems like the test API wound\u0027t let me do this so I\u0027d need to manually update the repo (which is possible).",
      "parentUuid": "6610f094_4ad30f35",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "75b3c5619f0ea818f14cb1f5d9459ad6b3f28133",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37aa147d_30458601",
        "filename": "javatests/com/google/gerrit/plugins/checks/acceptance/api/ListChecksIT.java",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-07T19:17:17Z",
      "side": 1,
      "message": "I was thinking of the case where the note in refs/meta/checkers has dangling or invalid UUIDs. In that case CheckersByRepositoryNotes#load (via NoteDbCheckers#checkersOf) skips those lines. You would have to have to modify the notes directly in that case, though.\n\nAnyway, on further reflection, I think it\u0027s fine for those cases to only be covered in the tests for CheckersByRepositoryNotes.",
      "parentUuid": "d5ebd7c8_8c198aab",
      "revId": "75b3c5619f0ea818f14cb1f5d9459ad6b3f28133",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d15f9b4_6210d629",
        "filename": "javatests/com/google/gerrit/plugins/checks/acceptance/api/UpdateCheckIT.java",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1010008
      },
      "writtenOn": "2019-03-06T18:00:10Z",
      "side": 1,
      "message": "Please add tests for nonexistent and syntactically invalid checker UUIDs.",
      "revId": "75b3c5619f0ea818f14cb1f5d9459ad6b3f28133",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c9efaf8_660fb611",
        "filename": "javatests/com/google/gerrit/plugins/checks/acceptance/api/UpdateCheckIT.java",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 1026112
      },
      "writtenOn": "2019-03-07T17:23:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d15f9b4_6210d629",
      "tag": "autogenerated:gerrit:newPatchSet",
      "revId": "75b3c5619f0ea818f14cb1f5d9459ad6b3f28133",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}